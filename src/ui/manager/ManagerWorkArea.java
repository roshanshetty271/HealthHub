package ui.Manager;

import Business.NetworkHelp;
import Business.Organizations.Org;
import Business.Organizations.ManagerOrg;
import Business.RequestFramework.ManagerRequestFrameworkFramework;
import Business.userAccount.Users;
import Business.RequestFramework.RequestFramework;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
//import ui.Sponsors.ViewMyProfile;
import ui.Helper.ViewHelperProfile;

/**
 *
 * @author prasanna
 */
public class ManagerWorkArea extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private NetworkHelp environment;
    private Users users;
    private ManagerOrg managerOrg;

    /**
     * Creates new form SupervisorWorkAreaJPanel
     */
    public ManagerWorkArea(JPanel userProcessContainer, Users users, Org org, NetworkHelp environment ) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.environment = environment;
        this.users = users;
        this.managerOrg = (ManagerOrg) org;
        
        populateWorkRequestTable();
        
     }
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
        int w = getWidth();
        int h = getHeight();
        
       Color c1 = new Color(210,240,114);
         Color c2 = new Color(210,240,114);
     
        GradientPaint gp = new GradientPaint(w/4, 0, c2, w/4, h, c1);
        setOpaque( false );
        g2d.setPaint(gp);
        g2d.fillRect(0, 0, w, h);
        setOpaque( true );
    }
    
    public void populateWorkRequestTable()
    {
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        model.setRowCount(0);
        
        for(RequestFramework requestFramework : managerOrg.getRequestPipeline().getRequestList()){
         
            Object[] row = new Object[5];
            row[0] = requestFramework;
            row[1] = requestFramework.getSenderDetails().getPerson().getName();
            row[2] = requestFramework.getReceiverDetails() == null ? null : requestFramework.getReceiverDetails().getPerson().getName();
            row[3] = requestFramework.getStatusOfRequest();
            row[4] = requestFramework.getSenderDetails().getRole().toString();
            model.addRow(row);
        }
    }
    
    public void populateWorkRequestToBeProcessedTable()
    {
      DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        model.setRowCount(0);
        
        for(RequestFramework requestFramework : managerOrg.getRequestPipeline().getRequestList()){
         if(requestFramework.getStatusOfRequest().equalsIgnoreCase("Sent") || requestFramework.getStatusOfRequest().equalsIgnoreCase("Pending") ||
              requestFramework.getStatusOfRequest().equalsIgnoreCase("Processing")   )
         {
            Object[] row = new Object[4];
            row[0] = requestFramework;
            row[1] = requestFramework.getSenderDetails().getPerson().getName();
            row[2] = requestFramework.getReceiverDetails() == null ? null : requestFramework.getReceiverDetails().getPerson().getName();
            row[3] = requestFramework.getStatusOfRequest();
            
            model.addRow(row);
         }
        }   
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        updateSupervisorProfile = new javax.swing.JButton();
        viewReqToBeProcessedBtn = new javax.swing.JButton();
        viewRequestorProfile = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 102, 102));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Receiver", "Status", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        jLabel6.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel6.setText("Manager Dashboard");

        jLabel7.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        jLabel7.setText("Work Requests:");

        assignJButton.setBackground(new java.awt.Color(0, 153, 255));
        assignJButton.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        assignJButton.setForeground(new java.awt.Color(255, 255, 255));
        assignJButton.setText("Assign to me");
        assignJButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });

        processJButton.setBackground(new java.awt.Color(0, 153, 255));
        processJButton.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        processJButton.setForeground(new java.awt.Color(255, 255, 255));
        processJButton.setText("Process");
        processJButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setBackground(new java.awt.Color(0, 153, 255));
        refreshJButton.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        refreshJButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshJButton.setText("Refresh");
        refreshJButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        updateSupervisorProfile.setBackground(new java.awt.Color(0, 153, 255));
        updateSupervisorProfile.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        updateSupervisorProfile.setForeground(new java.awt.Color(255, 255, 255));
        updateSupervisorProfile.setText("Create My Profile");
        updateSupervisorProfile.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateSupervisorProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateSupervisorProfileActionPerformed(evt);
            }
        });

        viewReqToBeProcessedBtn.setBackground(new java.awt.Color(0, 153, 255));
        viewReqToBeProcessedBtn.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        viewReqToBeProcessedBtn.setForeground(new java.awt.Color(255, 255, 255));
        viewReqToBeProcessedBtn.setText("View Request to be Processed");
        viewReqToBeProcessedBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewReqToBeProcessedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewReqToBeProcessedBtnActionPerformed(evt);
            }
        });

        viewRequestorProfile.setBackground(new java.awt.Color(0, 153, 255));
        viewRequestorProfile.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        viewRequestorProfile.setForeground(new java.awt.Color(255, 255, 255));
        viewRequestorProfile.setText("View Requestor Profile");
        viewRequestorProfile.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewRequestorProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRequestorProfileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(351, 351, 351)
                                .addComponent(refreshJButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(viewReqToBeProcessedBtn)
                                .addGap(18, 18, 18)
                                .addComponent(viewRequestorProfile)
                                .addGap(39, 39, 39)
                                .addComponent(assignJButton)
                                .addGap(50, 50, 50)
                                .addComponent(processJButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(updateSupervisorProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(268, 268, 268))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel6)
                .addGap(17, 17, 17)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(refreshJButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewReqToBeProcessedBtn)
                    .addComponent(viewRequestorProfile)
                    .addComponent(assignJButton)
                    .addComponent(processJButton))
                .addGap(44, 44, 44)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateSupervisorProfile)
                .addContainerGap(53, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
        JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
           return;
        }
        
        RequestFramework requestFramework = (RequestFramework)workRequestJTable.getValueAt(selectedRow, 0);
        if(requestFramework.getReceiverDetails()!=null)
        {
         JOptionPane.showMessageDialog(null, "RequestFramework has been processed earlier !", "warning", JOptionPane.WARNING_MESSAGE);
         return;     
        }
        requestFramework.setReceiver(users);
        requestFramework.setStatus("Pending");
        populateWorkRequestTable();

    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
           JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
           return;
        }

        ManagerRequestFrameworkFramework request = (ManagerRequestFrameworkFramework)workRequestJTable.getValueAt(selectedRow, 0);
        if(request.getReceiverDetails() == null)
        {
            JOptionPane.showMessageDialog(null, "Please assign the request first", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(request.getStatusOfRequest().equalsIgnoreCase("Completed"))
        {
         JOptionPane.showMessageDialog(null, "RequestFramework has been processed earlier!", "warning", JOptionPane.WARNING_MESSAGE);
         return;     
        }
         if(request.getStatusOfRequest().equalsIgnoreCase("Processing") ||  request.getStatusOfRequest().equalsIgnoreCase("Pending"))
        {
         if(request.getReceiverDetails()!= users)
         {
         JOptionPane.showMessageDialog(null, "RequestFramework has been processed earlier!", "warning", JOptionPane.WARNING_MESSAGE);
         return;     
         }
        }
        
        request.setStatus("Processing");

        ManagerProcessRequestArea mwrajp = new ManagerProcessRequestArea(userProcessContainer, request, environment);
        userProcessContainer.add("processWorkRequestJPanel", mwrajp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateWorkRequestTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void viewReqToBeProcessedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewReqToBeProcessedBtnActionPerformed
       populateWorkRequestToBeProcessedTable();
    }//GEN-LAST:event_viewReqToBeProcessedBtnActionPerformed

    private void viewRequestorProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRequestorProfileActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
           JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
           return;
        }

        ManagerRequestFrameworkFramework request = (ManagerRequestFrameworkFramework)workRequestJTable.getValueAt(selectedRow, 0);
        Users  user = request.getSenderDetails();
       
         ViewHelperProfile viewHelperProfile = new ViewHelperProfile(userProcessContainer,  user);
         CardLayout layout = (CardLayout) userProcessContainer.getLayout();
         userProcessContainer.add("ViewVolunteerProfile", viewHelperProfile);
         layout.next(userProcessContainer);  
      
        
    }//GEN-LAST:event_viewRequestorProfileActionPerformed

    private void updateSupervisorProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateSupervisorProfileActionPerformed
       CreateSupervisorProfileJPanel createSupervisorProfileJPanel = new CreateSupervisorProfileJPanel(userProcessContainer, users);
         CardLayout layout = (CardLayout) userProcessContainer.getLayout();
         userProcessContainer.add("CreateSupervisorProfileJPanel", createSupervisorProfileJPanel);
         layout.next(userProcessContainer);  
    }//GEN-LAST:event_updateSupervisorProfileActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton updateSupervisorProfile;
    private javax.swing.JButton viewReqToBeProcessedBtn;
    private javax.swing.JButton viewRequestorProfile;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
